<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>