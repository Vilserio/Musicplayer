<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>